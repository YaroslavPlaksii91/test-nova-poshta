{"version":3,"file":"static/js/warehouses-view.965b255b.chunk.js","mappings":"sKACA,MAAyB,uB,SCYzB,EAXe,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,QAA1B,OACb,mBACEH,KAAMA,EACNI,UAAWC,EACXF,QAASA,EACTG,MAAO,CAAEL,MAAOA,GAJlB,SAMGC,GAPU,C,qHCATK,EAAU,mCAGT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACkBC,EAAAA,EAAAA,KAAW,GAAI,CACpCC,OAAQJ,EACRK,UAAW,mBACXC,aAAc,qBACdC,iBAAkB,CAChBC,UAAW,CACT,CACEC,eAAgBP,OARnB,uBACGQ,EADH,EACGA,KADH,kBAcEA,EAAKA,KAAK,IAdZ,kEAiBA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAA6BC,EAA7B,+BAA0C,2BAAQC,EAAlD,+BAAyD,IAAzD,SACkBV,EAAAA,EAAAA,KAAW,GAAI,CACpCC,OAAQJ,EACRK,UAAW,UACXC,aAAc,gBACdC,iBAAkB,CAChBO,SAAUF,EACVG,KAAMF,EACNG,MAAO,MACPC,SAAU,QATT,uBACGP,EADH,EACGA,KADH,kBAaEA,EAAKA,MAbP,mEAnBPP,EAAAA,EAAAA,SAAAA,QAAyB,sC,kGCFzB,EAAuB,6BAAvB,EAA2D,6B,SCiB3D,EAhBuB,SAAC,GAAoB,IAAlBe,EAAiB,EAAjBA,WACxB,OACE,6BACGA,EAAWC,OAAS,IACnB,eAAItB,UAAWC,EAAf,SACGoB,EAAWE,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,IAAhB,OACd,eAAczB,UAAWC,EAAzB,UACE,uBAAIuB,KADGC,EADK,OASzB,E,oCCfD,EAAuB,uBCgDvB,EA5CiB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACjC,GAA0BC,EAAAA,EAAAA,UAAS,4BAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMMC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBADiB,SAIjBN,GAAa,GAJI,UAMQb,EAAAA,EAAAA,GAAce,GANtB,OAMXR,EANW,OAQjBK,EAAcL,GARG,gDAUjBa,QAAQC,IAAR,MAViB,yBAYjBR,GAAa,GAZI,4EAAH,sDAgBlB,OACE,kBAAMS,SAAUL,EAAc/B,UAAWC,EAAzC,WACE,kBAAOoC,QAAQ,QAAf,oGACA,kBACEC,GAAG,QACH1C,KAAK,OACL2C,KAAK,QACLC,QAAQ,oEACRC,MAAM,8KACNC,UAAQ,EACRC,MAAOd,EACPe,SA/Be,SAAAZ,GACnBF,EAASE,EAAEa,OAAOF,MACnB,KAgCG,SAACG,EAAA,EAAD,CAAQlD,KAAM,SAAUC,MAAO,IAA/B,8CAKL,EClBD,EAxBuB,SAAC,GAAsB,IAApB8B,EAAmB,EAAnBA,aACxB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOP,EAAP,KAAmBK,EAAnB,KACMqB,GAAgBC,EAAAA,EAAAA,SAAO,GAc7B,OAZAC,EAAAA,EAAAA,YAAU,WACHF,EAAcG,UAEnBvB,GAAa,IACbb,EAAAA,EAAAA,KACGqC,KAAKzB,GACL0B,MAAMlB,QAAQC,KACdkB,SAAQ,kBAAM1B,GAAa,EAAnB,IAEXoB,EAAcG,SAAU,EACzB,GAAE,CAACvB,KAGF,iCACE,SAAC,EAAD,CAAUD,cAAeA,EAAeC,aAAcA,KACtD,SAAC,EAAD,CAAgBN,WAAYA,MAGjC,C","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","services/api.js","webpack://react-homework-template/./src/components/WarehousesList/WarehousesList.module.css?6590","components/WarehousesList/WarehousesList.js","webpack://react-homework-template/./src/components/CityForm/CityForm.module.css?00d5","components/CityForm/CityForm.js","views/WarehousesView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import s from './Button.module.css';\n\nconst Button = ({ type, width, children, onClick }) => (\n  <button\n    type={type}\n    className={s.button}\n    onClick={onClick}\n    style={{ width: width }}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import axios from 'axios';\n\nconst API_KEY = '1b28326edcff857f4ee526a21a2b6018';\naxios.defaults.baseURL = 'https://api.novaposhta.ua/v2.0/json/';\n\nexport async function getDocumentStatus(documentNumber) {\n  const { data } = await axios.post('', {\n    apiKey: API_KEY,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: documentNumber,\n        },\n      ],\n    },\n  });\n\n  return data.data[0];\n}\n\nexport async function getWarehouses(settlement = 'Київ', page = '1') {\n  const { data } = await axios.post('', {\n    apiKey: API_KEY,\n    modelName: 'Address',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      CityName: settlement,\n      Page: page,\n      Limit: '100',\n      Language: 'UA',\n    },\n  });\n\n  return data.data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"WarehousesList_list__4T04k\",\"item\":\"WarehousesList_item__Wxwo9\",\"error\":\"WarehousesList_error__1y-+Y\"};","import s from './WarehousesList.module.css';\n\nconst WarehousesList = ({ warehouses }) => {\n  return (\n    <section>\n      {warehouses.length > 0 && (\n        <ul className={s.list}>\n          {warehouses.map(({ Description, Ref }) => (\n            <li key={Ref} className={s.item}>\n              <p>{Description}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n};\n\nexport default WarehousesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"CityForm_form__Z93Ie\"};","import { useState } from 'react';\nimport { getWarehouses } from 'services/api';\nimport Button from 'components/Button';\nimport s from './CityForm.module.css';\n\nconst CityForm = ({ setWarehouses, setIsLoading }) => {\n  const [query, setQuery] = useState('Київ');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      setIsLoading(true);\n\n      const warehouses = await getWarehouses(query);\n\n      setWarehouses(warehouses);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor=\"query\">Населений пункт</label>\n      <input\n        id=\"query\"\n        type=\"text\"\n        name=\"query\"\n        pattern=\"[а-яА-ЯіІїЇґҐ]*\"\n        title=\"Введіть назву населеного пункту\"\n        required\n        value={query}\n        onChange={handleChange}\n      />\n\n      <Button type={'submit'} width={100}>\n        Пошук\n      </Button>\n    </form>\n  );\n};\n\nexport default CityForm;\n","import { useState, useEffect, useRef } from 'react';\nimport { getWarehouses } from 'services/api';\nimport WarehousesList from 'components/WarehousesList';\nimport CityForm from 'components/CityForm';\n\nconst WarehousesView = ({ setIsLoading }) => {\n  const [warehouses, setWarehouses] = useState([]);\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (!isFirstRender.current) return;\n\n    setIsLoading(true);\n    getWarehouses()\n      .then(setWarehouses)\n      .catch(console.log)\n      .finally(() => setIsLoading(false));\n\n    isFirstRender.current = false;\n  }, [setIsLoading]);\n\n  return (\n    <>\n      <CityForm setWarehouses={setWarehouses} setIsLoading={setIsLoading} />\n      <WarehousesList warehouses={warehouses} />\n    </>\n  );\n};\n\nexport default WarehousesView;\n"],"names":["type","width","children","onClick","className","s","style","API_KEY","getDocumentStatus","documentNumber","axios","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","data","getWarehouses","settlement","page","CityName","Page","Limit","Language","warehouses","length","map","Description","Ref","setWarehouses","setIsLoading","useState","query","setQuery","handleSubmit","e","preventDefault","console","log","onSubmit","htmlFor","id","name","pattern","title","required","value","onChange","target","Button","isFirstRender","useRef","useEffect","current","then","catch","finally"],"sourceRoot":""}